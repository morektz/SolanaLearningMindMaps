@startmindmap

/' 
This is based off this article 
https://solana.com/news/getting-started-with-solana-development
This generates the stuff mentioned in the above link
'/


'scale 2 

' Styling

skinparam {
    DefaultTextAlignment Center
    DefaultFontName Arial
    ArrowColor Black
}



header 
---
%date()
---
end header 

title 
= Solana Programs Overview 

Native Programs = Solana contains a small handful of native programs, 
which are required to run validator nodes
SPL (Solana Program Library) = The Solana Program Library (SPL) is a collection of 
on-chain programs targeting the Sealevel parallel runtime



end title 




+ Solana

++ Native \n Programs
+++ System
++++ Create new accounts, \n allocate account data, \n assign accounts to \n owning programs, transfer lamports from \n System Program owned accounts and \n pay transaction fees.
+++ Config
++++ Add configuration data \n to the chain and the list of \npublic keys that are permitted to modify it 
+++ Stake 
++++ Create and manage accounts \n representing stake and rewards \n for delegations to validators.
+++ Vote 
++++ Create and manage accounts \n that track validator voting state and rewards.
+++ BPF \n Loader 
++++ Deploys, upgrades, and \n executes programs on the chain.
+++ Ed25519 
++++ Verify ed25519 signature program. \n This program takes an \n ed25519 signature, public key, and message. \n Multiple signatures can be verified. \n If any of the signatures fail to verify, \n an error is returned.
+++ Secp256k1
++++ Verify secp256k1 public key \n recovery operations (ecrecover). 

-- SPL (Solana \n Program \n Library)
--- Token 
---- This program defines a common implementation for \nFungible and Non Fungible tokens.
--- Token Swap 
---- A Uniswap-like exchange for the Token program \n on the Solana blockchain, \n implementing \n multiple automated market maker (AMM) curves.
--- Token-Lending 
---- A lending protocol for the \n Token program \n on the Solana blockchain \n inspired by Aave and Compound.
--- Asociated \n Token \n account
---- This program defines the convention \n and provides the mechanism \n for mapping the user's wallet address \n to the associated token accounts they hold.

@endmindmap
